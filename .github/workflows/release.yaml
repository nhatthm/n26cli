name: release

on:
  release:
    types:
      - created

jobs:
  get-release:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.get-release.outputs.tag_name }}
      upload_url: ${{ steps.get-release.outputs.upload_url }}
    steps:
      - name: Get release
        id: get-release
        uses: nhatthm/gh-actions/github-get-release@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  release:
    needs: get-release
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        arch: [ "386", amd64, arm64 ]
        exclude:
          - os: macos-latest
            arch: "386"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: nhatthm/gh-actions/checkout@master

      - name: Setup
        uses: nhatthm/gh-actions/find-go-version@master

      - name: Install Go
        uses: nhatthm/gh-actions/setup-go@master
        with:
          go-version: ${{ env.GO_LATEST_VERSION }}

      - name: Build Artifact
        id: build_artifact
        env:
          VERSION: ${{ needs.get-release.outputs.tag_name }}
          BUILD_OS: ${{ matrix.os }}
          BUILD_ARCH: ${{ matrix.arch }}
        run: |
          export VERSION=$(echo "$VERSION" | tr -d 'v')

          if [[ "$BUILD_OS" == "macos-latest" ]]; then
            BUILD_OS="darwin"
          else
            BUILD_OS="linux"
          fi

          make build

          cd build
          tar czf n26-${VERSION}-${BUILD_OS}-${BUILD_ARCH}.tar.gz n26

          echo "BUILD_VERSION=$VERSION" >> $GITHUB_ENV
          echo "BUILD_OS=$BUILD_OS" >> $GITHUB_ENV
          echo "BUILD_ARCH=$BUILD_ARCH" >> $GITHUB_ENV

      - name: Upload Artifact
        uses: nhatthm/gh-actions/github-upload-release-asset@master
        with:
          upload_url: ${{ needs.get-release.outputs.upload_url }}
          asset_path: build/n26-${{ env.BUILD_VERSION }}-${{ env.BUILD_OS }}-${{ env.BUILD_ARCH }}.tar.gz
          asset_name: n26-${{ env.BUILD_VERSION }}-${{ env.BUILD_OS }}-${{ env.BUILD_ARCH }}.tar.gz
          asset_content_type: application/gzip
          token: ${{ secrets.GITHUB_TOKEN }}
